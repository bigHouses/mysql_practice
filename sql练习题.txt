1、自行创建测试数据
2、查询“生物”课程比“物理”课程成绩高的所有学生的学号；


3、查询平均成绩大于60分的同学的学号和平均成绩；

思路：
产寻学生的id，和成绩，然后用avg函数来求得同一id号的学生平均成绩，并用having进行成绩的筛选


增加显示学生名


4、查询所有同学的学号、姓名、选课数、总成绩；
语句进化过程：
（1）先讲student表关联起来，关联条件是student_id

（2）再通过条件筛选自己需要显示的内容，用limit来分页显示

（3）用聚合函数count来统计课程数，用sum来算成绩的合。


5、查询姓“李”的老师的个数；


6、查询没学过“李平”老师课的同学的学号、姓名；
（1）查出李平老师所受的课

（2）查出选择李平老师讲课的学生

（3）排除选择李平老师讲课的学生



7、查询学过“1”并且也学过编号“2”课程的同学的学号、姓名；
（1）取出课程id是1和2的课程

（2）通过student_id来进行分组根据having来过来选择两门的学生

（3）连表


8、查询学过“叶平”老师所教的所有课的同学的学号、姓名；
（1）连表查询课程和老师，并过滤出李平老师

（2）查出选择李平老师课程的学生id

（3）关联学生表显示姓名


9、查询课程编号“2”的成绩比课程编号“1”课程低的所有同学的学号、姓名；


10、查询有课程成绩小于60分的同学的学号、姓名；


11、查询没有学全所有课的同学的学号、姓名；


12、查询至少有一门课与学号为“1”的同学所学相同的同学的学号和姓名；
（1）查询学生所选课程是否在学生id为1的学生的课程里面

（2）和学生表关联取出相关的ID和姓名


13、查询至少学过学号为“1”同学所选课程中任意一门课的其他同学学号和姓名；


14、查询和“2”号的同学学习的课程完全相同的其他同学学号和姓名；
  (1)和002号同学选择的个数相同的学生id

（2）在筛选和“2”号同学选择课程名相同的学生id



15、删除学习“李平”老师课的SC表记录；


16、向SC表中插入一些记录，这些记录要求符合以下条件：①没有上过编号“002”课程的同学学号；②插入“002”号课程的平均成绩；?




17、按平均成绩从低到高显示所有学生的“生物”、“物理”、“体育”
三门的课程成绩，按如下形式显示： 学生ID,生物,物理,体育,有效课程数,有效平均分；




18、查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分；
思路：通过课程id来进行分组，这个时候会显示四行，然后用聚合函数max，min来找出最大值和最小值。


19、按各科平均成绩从低到高和及格率的百分数从高到低顺序；
新知识点：case when then相当于if判断


20、课程平均分从高到低显示（现实任课老师）；


21、查询各科成绩前三名的记录:(不考虑成绩并列情况)?


22、查询每门课程被选修的学生数；


23、查询出只选修了一门课程的全部学生的学号和姓名；


24、查询男生、女生的人数；


25、查询姓“张”的学生名单；


26、查询同名同姓学生名单，并统计同名人数；


27、查询每门课程的平均成绩，结果按平均成绩升序排列，平均成绩相同时，按课程号降序排列；


28、查询平均成绩大于85的所有学生的学号、姓名和平均成绩；


29、查询课程名称为“生物”，且分数低于60的学生姓名和分数；


30、查询课程编号为003且课程成绩在80分以上的学生的学号和姓名；


31、求选了课程的学生人数


32、查询选修“刘海燕”老师所授课程的学生中，成绩最高的学生姓名及其成绩；


33、查询各个课程及相应的选修人数；


34、查询不同课程但成绩相同的学生的学号、课程号、学生成绩；


35、查询每门课程成绩最好的前两名；



36、检索至少选修两门课程的学生学号；


37、查询全部学生都选修的课程的课程号和课程名；

38、查询没学过“李平”老师讲授的任一门课程的学生姓名；


39、查询两门及两门以上不及格课程的同学的学号及其平均成绩；


40、检索“004”课程分数小于60，按分数降序排列的同学学号；


41、删除“002”同学的“001”课程的成绩；
